// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package user

import (
	"context"

	"go-zero-learn/rpc/client/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ProductReq  = user.ProductReq
	ProductResp = user.ProductResp
	UserReq     = user.UserReq
	UserResp    = user.UserResp

	User interface {
		Create(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Create(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}
