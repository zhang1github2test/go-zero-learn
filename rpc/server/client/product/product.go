// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package product

import (
	"context"

	"go-zero-learn/rpc/server/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ProductReq  = user.ProductReq
	ProductResp = user.ProductResp
	UserReq     = user.UserReq
	UserResp    = user.UserResp

	Product interface {
		Create(ctx context.Context, in *ProductReq, opts ...grpc.CallOption) (*ProductResp, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) Create(ctx context.Context, in *ProductReq, opts ...grpc.CallOption) (*ProductResp, error) {
	client := user.NewProductClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}
